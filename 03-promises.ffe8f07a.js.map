{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAiB/B,OAhBgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAM,CACVL,SAAUA,EACVC,MAAOA,GAGTK,YAAW,WACaC,KAAKC,SAAW,GAEpCL,EAAQE,GAERD,EAAOC,KAERJ,MAhBYQ,SAASC,cAAc,SAoD/BC,iBAAiB,UA9BT,SAAAC,GACjBA,EAAMC,iBAUN,IARA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGrBC,EAAUC,OAAOJ,EAAMK,OACvBC,EAAWF,OAAOF,EAAOG,OACzBE,EAASH,OAAOH,EAAKI,OAElBG,EAAI,EAAGA,EAAIF,EAAUE,IAC5B1B,EAAc0B,EAAI,EAAGL,EAAUI,EAASC,GACrCC,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,QAAQC,IAAI,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,OAC1D8B,EAAAlC,GAASmC,OAAOC,QACd,uBAAwCH,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,UAGjDiC,OAAM,SAAAP,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,QAAQC,IAAI,sBAAuCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,OACzD8B,EAAAlC,GAASmC,OAAOG,QACd,sBAAqCL,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,UAKnDW,EAAMG,cAAcqB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formSubmit = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const Obj = {\n      position: position,\n      delay: delay,\n    };\n\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(Obj);\n      } else {\n        reject(Obj);\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nconst submitForm = event => {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const delayEl = Number(delay.value);\n  const amountEl = Number(amount.value);\n  const stepEl = Number(step.value);\n\n  for (let i = 0; i < amountEl; i++) {\n    createPromise(i + 1, delayEl + stepEl * i)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  event.currentTarget.reset();\n};\n\nformSubmit.addEventListener('submit', submitForm);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Obj","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayEl","Number","value","amountEl","stepEl","i","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.ffe8f07a.js.map"}